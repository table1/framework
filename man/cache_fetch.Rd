% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache_read.R
\name{cache_fetch}
\alias{cache_fetch}
\title{Get a value, caching the result if not found}
\usage{
cache_fetch(name, expr, file = NULL, expire_after = NULL, refresh = FALSE)
}
\arguments{
\item{name}{The cache name (non-empty string identifier)}

\item{expr}{The expression to evaluate and cache if cache miss occurs.
Expression is evaluated in the parent frame.}

\item{file}{Optional file path to store the cache
(default: {config$options$data$cache_dir}/{name}.rds)}

\item{expire_after}{Optional expiration time in hours
(default: from config$options$data$cache_default_expire)}

\item{refresh}{Optional boolean or function that returns boolean to force
refresh. If TRUE or if function returns TRUE, cache is invalidated and
expression is re-evaluated.}
}
\value{
The cached value (if cache hit) or the result of evaluating expr
(if cache miss or refresh requested)
}
\description{
Attempts to retrieve a cached value by name. If the cache doesn't exist,
is expired, or a refresh is requested, evaluates the expression and caches
the result. This is the primary caching interface for expensive computations.
}
\examples{
\dontrun{
# Cache expensive computation
result <- cache_fetch("my_analysis", {
  expensive_computation()
})

# Force refresh when data changes
result <- cache_fetch("analysis", {
  run_analysis()
}, refresh = file.mtime("data.csv") > cache_time)
}

}
