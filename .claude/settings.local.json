{
  "permissions": {
    "allow": [
      "mcp__zen__consensus",
      "Bash(git rebase:*)",
      "Bash(~/.local/bin/framework-global new:*)",
      "Bash(git log:*)",
      "Bash(%ad)",
      "Bash(%s --date=iso --name-status -10)",
      "Bash(Rscript:*)",
      "mcp__zen__chat",
      "Bash(R:*)",
      "Bash(framework help:*)",
      "Read(//Users/erikwestlund/.local/bin/**)",
      "Read(//Users/erikwestlund/code/**)",
      "Bash(echo:*)",
      "Read(//private/tmp/framework-test/**)",
      "Read(//private/tmp/fw-test/**)",
      "Read(//Users/erikwestlund/Library/R/arm64/4.4/library/framework/project_structure/project/**)",
      "Read(//private/tmp/**)",
      "Bash(bash -c 'source ~/.local/bin/framework-global && check_settings_configured && echo \"\"Settings configured\"\" || echo \"\"Settings NOT configured - will prompt\"\"')",
      "Read(//Users/erikwestlund/Library/Application Support/CleanShot/media/media_CkxGbledDs/**)",
      "Bash(chmod:*)",
      "Bash(./tests/docker/scripts/manual-test.R)",
      "Bash(./tests/docker/scripts/test-pooling.R)",
      "Bash(find:*)",
      "mcp__zen__planner",
      "Bash(git add:*)",
      "mcp__zen__analyze",
      "Bash(framework new:*)",
      "Bash(framework data:list:*)",
      "Bash(for func in ai_sync_context configure_author configure_connection configure_data configure_directories configure_packages hooks_disable hooks_enable hooks_install hooks_list hooks_uninstall)",
      "Bash(do)",
      "Bash(if grep -q \"^$func\\s*<-\\s*function\\|^$func\\s*=\\s*function\" /Users/erikwestlund/code/framework/R/*.R)",
      "Bash(then)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(./bin/framework connections:list:*)",
      "Bash(./bin/framework packages:list:*)",
      "Bash(./bin/framework data:list:*)",
      "Bash(./bin/framework packages:install:*)",
      "Bash(./bin/framework help:*)",
      "Bash(git init:*)",
      "Bash(./bin/framework hooks:list:*)",
      "Bash(FW_IDES=\"vscode\" FW_AUTHOR_NAME=\"Test\" R:*)",
      "Bash(cat:*)",
      "Bash(quarto render:*)",
      "Bash(tree -L 2 -a:*)",
      "Bash(git checkout:*)",
      "Bash(tree:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(git commit:*)"
    ],
    "deny": [],
    "ask": []
  }
}
